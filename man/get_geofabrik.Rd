% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_geofabrik.R
\name{get_geofabrik}
\alias{get_geofabrik}
\title{Download OSM data from geofabrik}
\usage{
get_geofabrik(
  name = "west-yorkshire",
  layer = "lines",
  ...,
  attributes = make_additional_attributes(layer = layer),
  download_directory = gf_download_directory(),
  ask = TRUE,
  max_dist = 5,
  op = sf::st_contains
)
}
\arguments{
\item{name}{String or \code{\link[sf:sf]{sf::sf}} spatial object of the geofabrik zone
to download. See examples.}

\item{layer}{Character string telling \code{sf} which OSM layer to import.
One of \code{points}, \code{lines} (the default), \code{multilinestrings}, \code{multipolygons} or \code{other_relations}}

\item{...}{Additional arguments passed to \code{\link[=read_pbf]{read_pbf()}}}

\item{attributes}{Vector of character strings naming attributes to import}

\item{download_directory}{Where to download the data? \code{tempdir()} by default.
If you want to download your data into a persistent directory, set
\verb{GF_DOWNLOAD_DIRECTORY=/path/for/osm/data} in your \code{.Renviron} file, e.g. with
\code{usethis::edit_r_environ()}.}

\item{ask}{Should the user be asked before downloading the file?}

\item{max_dist}{What is the maximum distance in fuzzy matching to tolerate before asking
the user to select which zone to download?}

\item{op}{The binary spatial predicate used to identify the smallest geofabrik zones
that matches the simple feature input in \code{name}}
}
\description{
Download OSM data from \url{http://download.geofabrik.de/}
}
\examples{
\donttest{
get_geofabrik("isle of man")
andorra = get_geofabrik(name = "andorra") # try other names, e.g. name = "west-yorkshire"
head(andorra)
cycleways_andorra = get_geofabrik("andorra", key = "highway", value = "cycleway")
plot(cycleways_andorra)
# user asked to choose closest match when interactive
# get_geofabrik("kdljfdl", ask = FALSE) # not run to save time
# get zone associated with a point
name = sf::st_sfc(sf::st_point(c(-1.3, 50.7)), crs = 4326)
get_geofabrik(name)
name = sf::st_sfc(sf::st_point(c(0, 53)), sf::st_point(c(-2, 55)), crs = 4326)
gf_find_sf(name)
}
}
